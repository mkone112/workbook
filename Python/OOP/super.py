>> прокси-obj базового класса
    #который делегирует вызовы базовому классу|его экземпляру без создания доп obj


super
#класс
    super()
    #ЭКВ super(__class__, <first_arg>)
    super(type) -> unbound super obj
    super(type, obj) -> bound super obj
    #requires isinstance(obj, type)
    super(type, type2) -> bound super obj
    #requires issubclass(type2, type)
#может принимать
    super(<производный_класс>, <экз_производного_класса>)
    # по сути ИЗМ начальный класс для поиска attr в иерархии классов
    # >> связанный метод
        # метод связанный c obj(экземпляром) который дает методу контекст obj(его val attrs)
    #if <экз> не указан attr просто attr(напр fx) не связанный с контекстом obj
#вызов без args - рекомендуется
    # необходимость регулярного ИЗМ порядка поиска attr в иерархии классов:
        # указывает на проблемы проектирования