СТИЛЬ КОДА
	вроде нужно отбивать селектор от блока св-в табом
		h1	{
			...
		}
	возможно св-ва нужно указывать в опред порядке
		font в начале?
	порядок attr?
		<link href=... rel=...>?
		
		
ТЕГИ
#СХЕМА ВЫБОРА HTML5 ТЕГА:tinyurl.com/o298cs6
	<br>
	#
	
	
	<blockquote>
	#цитирование материала из другого источника
	#исп
		отрывок текста с другого сайта
		длинные тексты(высказывания)
	#мб исп для выделения текста отступом вправо
	
	
	<q>
	#цитата
		<p>Говорят, что Марк Твен как-то рза написал:
			<q>Самой холодной из ∀ проведенных мною ...</q>
			На самом деле это не так ...
		</p>
	#исп
		вставка краткой цитаты в более длинный абзац
	
	<table>
	#табличная верстка страдала от вложенности
	#отображение
		таблиц
		списков
		диаграмм
	
	
	<h1>
	#создание заголовка предшествующего основному содержимомоу
	#обычно заголовок ∀ страницы
	
	<h2...>
	#подзаголовки, делят содержимое на связанные разделы
	
	
	<ol>
	#нумерованный список
	#исп
		ряд {xn} exe операций
		порядок набора эл-тов
		
	<dl>
	#список определений терминов
	#исп
		словарь терминов с определениями
		#в сочетании с <dt>/<dd>
	#пример: tinyurl.com/ne888za
	
	
	<dt>
	#название термина
	#исп для создания словаря терминов с определениями в <dl>
	
	
	<dd>
	#определение термина
	#исп для создания словаря терминов с определениями в <dl>
	
	<ul>
	#маркированный(ненумерованный) список
	#исп
		перечень связанных элтов
			ссылки навигации
			ссылки содержания
			подсказки
			...
	
	<img src="<path>" alt="<description>"/>
	#изображение
		<img src="holidays.jpg" alt="Пляж">
	
	<abbr>
	#сокращения аббревиатур
	
	
	<code>
	#source код
	
	
	<recipe>
	#такой тег вообще ∃?
	
	
	<header>
	#HTML5
	#может ⊃ содержимое верхней части страницы(логотип, навигационная панель, etc)
	#верхний колонтитул
	
	<nav>
	#HTML5
	#панель навигации ⊃ ссылки
	
	
	<footer>
	#HTML5
	#подвал ⊃ юр информацию, контакты, ...
	#нижний колонтитул
	#может быть помещен напр в <article> для ⊃ информации о публикации(ссылки, дата, ...)
	
	
	<figure>
	#HTML5
	#рисунок
	#в него мб помещены
		<img>
		<figcaption>
		#отображение подписи рисунка(пояснения к изображению в <figure>)
	
	<!doctype ...>
	#объявление типа документа
	#∀ веб-страницы начинаются с объявления типа
	#определяет разновидность/версию HTML исп страницей
	#примеры ∀ разновидностей объявлений:tinyurl.com/onw4nq
	#краткая форма
		<!doctype html>
		#HTML5+
		#IE 6+
	#обязателен, if !∃ -> разные браузеры не имеющие в качестве руководства объявление типа документа могут по разному отображать информацию форматированную CSS(видимо могут игнорить стили)
	
	
	<html>
	#идентифицирует документ как веб-страницу
	#⊃ ∀ элты страницы
	#занимает ∀ пространство страницы
	
	
	<head>
	#раздел заголовка
	#⊃
		название страницы
		служебная инфа для браузеров/поисковых ботов
		css
		...
		
		
	<body>
	#раздел тела
	#вроде занимает ∀ пространство <html>
	#⊃ ∀ отображаемое содержимое
	
	<style>
	#⊃ <head>
	#определяет внутренюю таблицу стилей
	#должен распологаться до JS тк js-сценарии часто исп css
		<head>
			...
			<style>
				h1 {
					color: #F7643;
					font-family: Arial;
				}
			</style>
			<script
			...
		</head>
	<p>
	#абзац текста
	
	
	<strong>
	#выделение текста полужирным
	
	
	<meta>
	#метаданные
		charset
		#
			"UTF-8"
			
	<a href="<link>">
	#элт привязки
	#создает гиперссылку
		name
		#может исп для перехода к части страницы
			<a name="Z">...</a>
			#переход по <url>#Z	перекинет к положению тега
	
	<article>
	#HTML5
	#раздел ⊃ завершенную, независимую публикацию
		статью
		запись блога
		описание товара
		основной текст страницы
	<div>
	#∃ почти сразу с появления HTML
	#исп при !∃ подходящего для содержимого элта
	#divide?
	#деление на фрагменты(отдельный законченный(инкапсулированный?) блок содержимого с разрывом строки до и после)(раздел)-> блочный
		#добавление стиля к изображению и подписи
		<div class="photo">
		<img src="holidays.jpg" alt="Птицы"/>
		<p>Подпись</p>
		</div>
	#может успешно заменять HTML5 теги
	#может ⊃ неск блочных эл-тов(а другие теги нет?)
	#в ∀ случае исп напр для группировки элтов(напр в блок новостей) для напр задания 
		последовательного? фонового цвета
		создания контура
		добавления тени
		...
	<link>
	#подключение внешнего ресурса
	#наткнувшись на тег -> браузер загружает указанный ресурс(?подробнее)
		<link href='http://fonts.googleapis.com/css?family=Kurale' rel='stylesheet'>
	#attr
		rel
		#тип ссылки(ресурса)
			stylesheet
			#таблица стилей
			href
			#ссылка
			#путь задается относительно текущего документа|корня
			#подробнее:tinyurl.com/oe6j3sr
	#примеры
		<link href="styles.css" rel="stylesheet">
	<section>
	#HTML5
	#раздел
	#группировка связанного содержимого
		глава книги
		разбивка главной на разделы(новости, контакты,...)
	
	
	<aside>
	#HTML5
	#отступление
	#содержимое связанное с неким контентом
		пометки на полях
	
	
	<video>
	#вставка видео
	
	
	<audio>
	#вставка аудио
		
	
	<span>
	#∃ почти сразу с появления HTML
	#исп при !∃ подходящего для содержимого элта
	#организация и группировка контента
	#применим к строчным элтам
	#может быть исп как
		<a>
		<strong>
	#можно применить к тегу, и исп на нем стиль
		<p>Собственность 2015. <span class="bizName">SuperCo.com</span></p>
	
	
	<cite>
	#цитата(ссылка на другой источник)
	#малоизвестен
	#выделение курсивом
	#исп
		ссылание на книжный заголовок|газетную статью|сайт
		
	
	<adress>
	#малоизвестен
	#исп
		обозначение контактов автора сайта
		указание авторских прав
		
		
	DEPRECATED
		<font>
		#вытеснен CSS
		#форматирование текста, не делает страницу понятнее/не добавляет структурирования
		#для форматирования ∀ абзацев на странице требовалось обернуть ∀ <p> в <font>
		#поддерживает только 7 кеглей(?) шрифта?
		
		
		<b>
		#вытеснен CSS|strong
		#жирный текст
		#вроде в HTML5 позволяет изменить начертание без семантического выделения
		
		<i>
		#вытеснен CSS|em
		#курсив
		#вроде в HTML5 позволяет изменить начертание без семантического выделения
	
СВОЙСТВА

	font-size
	#размер шрифта
	
	
	font-family
	#шрифт
		#через ',' вроде указываются альтернативные шрифты
		#а, serif это вроде начертание
		font-family: 'Kurale', 'Arial Black', serif;
	
	
	font-weight
	#жирность шрифта?
		font-weight: normal;
		
		
	margin
	#пространство вокруг элта
		#центрирование блока
		margin: 0 auto;
		
		
	border-radius
	#радиус скругления углов
		border-radius: 10px;
		
		
	box-shadow
	#
		box-shadow: 10px 10px 10px rgba(0, 0, 0,.5)
	
	
	margin-top
	#
	
	
	margin-left
	#
	
	
	margin-right
	#	
	
	
	margin-bottom
	#
	
	
	color
	#цвет
	
	
	padding
	#~отступ
	#пространство между границами элта и его содержимым
		padding: 20px;
		padding: 0 0 2px 60px;
		
padding:eng:набивка
margin:eng:поле, край, предел, грань, боковушка
воздух - пространтво вокруг блочных элтов контролируемое margin* и padding*
#автоматом добавляет браузерами

	padding-top
	#пространство между верхней частью эл-та и содержимым
	
	
	line-height
	#
	
	background-repeat
	#∃?
	
	
	background
	#позволяет комбинировать различные свва
		#комбинация background и background-repeat
		background: url(images/head-icon.png) no-repeat 10px 10px;
	
	
	background-image
	#фоновое изображение
		#неперекрывающаяся мозаика слева напрово, сверху-вниз
		background-image: url(images/bg_page.png);
	
	
	background-color
	#
		background-color: #E1EDEB;
		
		
	width
	#ширина
		#80% ширины окна браузера
		body {
			width: 80%;
		}
		
		
	height
	#
	
АТРИБУТЫ ЭЛТОВ
	style
	#принимает CSS-код
		#attr ⊂ HTML -> исп '='
		#val - CSS код
		<h1 style="color: #6A94CC; font-size: 3em;">Большая книга CSS</h1>
	class
	#указание класса
		<p class="special">...
		
		
ОТНОШЕНИЯ ТЕГОВ
	предок
	#эл-т ⊃ другой
	потомок
	#элт ⊂ другому
	родитель
	#находится на один уровень выше дочернего
	дочерний элт
	#находится на уровень ниже родителя
	родственный
	#дочерний для того же родителя
	ПРИМЕР
		<html>
		#предок head, body, p
		#родитель head, body		
			<head>
			#родственный body
			#...
			<body>
			#предок родитель p
			#родственный head
			#...
				<p>
				#потомок html, body
				#дочерний body
				#...
		
		
СЕЛЕКТОРЫ
#выбор форматируемых элтов

	СЕЛЕКТОРЫ ТЕГОВ(ЭЛЕМЕНТОВ)
	#форматирование ∀ экземпляров конктретного HTML элта
	#заголовок, абзац, ...
	#наследуют имена HTML элтов(тегов)
		html {
			...
		}
	
	
	ГРУППОВОЙ СЕЛЕКТОР
	#можно комбинировать ∀ типы селекторов
		html, address, .copyright, #banner {
			...
		}
	
	
	УНИВЕРСАЛЬНЫЙ СЕЛЕКТОР
	#для выборки ∀ элтов
		* {
			...
		}
	#можно исп
		в составе селектора потомков
		для удаления ∀ пространства вокруг блочных элтов
			* {
				padding: 0;
				margin: 0;
			}
	
	
	СЕЛЕКТОР ПОТОМКОВ
	#вложенный селектор
	#сокращает HTML, позволяя создавать индивидуальные стили без указания классов/id, объединяя простоту исп селекторов тегов и точность классов/id
	#использует дерево HTML
	#∀ элты потомки опред элта
	#синтаксис
		<∀ предок> [...] <потомок>
	#можно комбинировать ∀ типы селекторов
		#∀ элты ⊂ .banner
		.banner * {
			...
		}
	#примеры
		#∀ strong ⊂ h1
		h1 strong {
			...
		}
	#ИСП КРАТЧАЙШИЙ СЕЛЕКТОР ТОЧНО ОПРЕДЕЛЯЮЩИЙ ТЕГ(напр не стоит ⊃ html|body)
	#специфичность - поведение при конфликтах стилей
	#часто исп для форматирования модуля кода

	СЕЛЕКТОРЫ КЛАССОВ
	#начинаются с '.<A-z>'
	#регистрозависимы
	#могут ⊃ 
		A-z
		-
		_
	#синтаксис
		<<tag> class="intro">
		...
		.intro {
			...
		}
	#можно применить неск классов к одному элту(интересно что происходит при конфликтах?)
	#свва различных классов объединяются в результирующий стиль и применяются к элту
	классы разделяются пробелом
		#] ∃ интерфейс управления корзиной интернет магазина ⊃ кнопки
			удаления товара
			добавления товара
			Δ кол-ва товара
			#∀ кнопки ⊃ единый дизайн, но различались подсветкой
				CSS
				.btn {
					border-radius: 5px;
					font-family: Arial, Helvetica, serif;
					font-size: .8em;
				}
				.delete {
					background-color: red;
				}
				.add {
					background-color: green;
				}
				.edit {
					background-color: grey;
				}
				HTML
				<button class="btn add">...
				<button class="btn delete">...
				<button class="btn edit">...
				#?возможно получить доступ к такому элту можно также
					button.btn|button.btn.add
					#чем больше специфичность - тем выше приоритет
	

	КЛАСС ЭЛЕМЕНТА?
	#
		p.intro {
			...
		}
		
		<p class="intro">
		
	ИДЕНТИФИКАТОРЫ
	#исп для селекции уникальных частей(шапка, панель навигации)
	#исп JS/больших страницах
		простой способ определение частей для манипуляции
		#часто исп к заполняемым эл-там форм для напр валидации
		создание ссылок на части страницы
		#для этого даже не нужен css
		#вид
			<url>#<id>
			#~ исп <a name="<id>">...
	#вроде рекомендуется не исп
		id исп для скриптов
		исп id для скриптов требует доп проверок -> медленнее
		if подребуется добавить элт с таким-же стилем придется менять id на class 
		другие причины требующие глубокого понимания CSS
	#синтаксис
	#начинается с "#", в остальном ~ классам
		#banner {
			...
		}
		<<tag> id="banner">...
	#могут исп для указания того что элт единственный(вроде блока ⊃ copyright)
	
	
	ПСЕВДОКЛАССЫ И ПСЕВДОЭЛТЫ
	#выбор фрагментов !⊃ элты
		первая строка p
		выделенная ссылка
	#мб применен к различным селекторам(?∀)
		.highlight:hover {
			
		}
	#в CSS3 псевдоклассы начинаются с "::" -> можно исп ::first-letter , ::first-line
		
		ФОРМАТИРОВАНИЕ
			ССЫЛОК
				a:link
				#непосещенная, не выделенная
				
				a:visited
				#посещенная(⊃ истории браузера)
				#⊃ ограничения
				
				a:active
				#выбранная ссылка(во время нажатия)
			
			ФРАГМЕНТОВ АБЗАЦА
				:first-letter
				#псевдоэлт
				#форматирование текста
				#создание буквицы
				:first-line
				#псевдоэлт
				#форматирование первой строки текста
				
		
		
			
		:hover
		#псевдокласс
		#наведен курсор

РОЛЛ-ОВЕР-ЭФФЕКТ
#визуальный эффект трансформации


МОДУЛИ КОДА
#для форматирования модуля кода часто исп селекторы потомков
#коллекция html элтов exe на странице конкретную fx
	#вроде div ⊃ контакты
	<div class="contact">
		<p class="name">...</p>
		<p class="phone">...</p>
		...

НАСЛЕДОВАНИЕ
	
	
DOM
#Document Object Model - Объектная Модель Документа
#платформонезависимый api для доступа к/Δ содержимого HTML, XHTML, XML
#не накладывает ограничений на структуру документа
	#∀ документ известной структуры мб представлен деревом узлов(элемент|attr|текстовый/графический/∀ obj) связанных отношением родитель-наследник
#ранее ∀ бразер ⊃ свою реализацию, W3C классифицировали ее по уровням, создали для ∀ спеки объединенные в группу W3C DOM
#поддерживает навигацию в ∀ области(напр родитель и предыдущий брат) и учитывает ∀ Δ-> реализация должна min буфферизовать документ
#движок браузера преобразует HTML -> DOM, разные движки ⊃ разную поддержку стандартов DOM(уровни соответсвия)
#браузеры не обязаны исп DOM для исполнения HTML, но требуется для доступа к HTML из js


JDOM
#api для работы с XML в Java уровенем выше


УРОВНИ W3C DOM
	0
	#ограничения возможности обнаружения пользовательских событий и Δ HTML = DOM Level 0|традиционный DOM частично описанный в спеках HTML4, но не ⊃ независимого стандарта
	#⊃ ∀ модели DOM появившиеся до 1
		document.images
		document.forms
		document.layers
		document.all
	#формально не спецификация DOM, а информация о ∃ моделях до начала процесса стандартизации
	1
	#базовые fx возм DOM(HTML и XML)
		получение дерева узлов
		Δ/добавление данных	
	2
	#current
	#⊃
		поддержку пространтсва имен XML
		<--filtered views-->
		событий
	3
	#⊃ рекомендуемые на данный момент части
	#⊃ 6 различных спек
		DOM Level 3
			Core
			Load and Save
			XPath
			Views and Formatting
			Requirements
			Validation



jscript
#конкурировал с js в 90х, создан MS, вроде исп для написания страниц ASP и конфигурирования Win


ЗНАЧЕНИЯ
	float
	#можно записывать без 0
		.5
	
	
	colors
		rgba(<r:0..255>,<g:0..255>,<b:0..255>,<alpha:0..1>)
		#цветовая модель rgba

		
ЕДИНИЦЫ ИЗМЕРЕНИЯ
	em
	#вроде мб float
		font-size: 1.25em;
	%
	#мб > 100
		line-height: 150%;
	px
	#
	
можно объединить ∀ набор div, span в блоке div как
	заголовок
	маркированный список
	неск абзацев

при ошибках верстки
	кривом/отсутсвующем doctype
		браузер переключится в режим совместимости
РЕЖИМ СОВМЕСТИМОСТИ
#эмулирует работу старых браузеров выпускавшихся до 99 года(Netscape 4, IE5)
#подробнее:tinyurl.com/nr9dehz;	tinyurl.com/pm8k7ng
			
			
КОММЕНТАРИИ
	HTML
		УСЛОВНЫЕ КОММЕНТАРИИ INTERNET EXPLORER
		#походу помещенный в них код exe при exe условия
		#IE 6..8
		#игнорируется другими браузерами
			<!--[if <cond>]> <тело> <![endif]-->
		ПОДДЕРЖКА HTML5 В IE8(ЧАСТИЧНАЯ)
				<head>
					...
					<!--[if lt IE 9]> <script src="//html5shiv.googlecode.com/svn/trunk/html5.js"></script><![endif]-->
				</head>
	CSS
		/* comment */
			
			
			
подробнее об элтах HTML:tinyurl.com/d4gsdrr
подробнее об элтах HTML:tynyurl.com/pc3ddbc
подробнее об элтах HTML:"HTML5. Карманный справочник" Дженнифер Роббинс "Вильямс"


СТРОЧНЫЕ ЭЛТЫ
#находятся в пределах абзаца текста|заголовка
	#Cosmo-Farmer.com- строчный элт
	<p>Добро пожаловать на сайт <span class="companyName">Cosmo-Farmer.com</span>, дочерней компании ...
	
	
ПРИНУДИТЕЛЬНАЯ ПЕРЕЗГРУЗКА СТРАНИЦЫ
#без исп кеша
	CHROME, IE	CTRL-F5
	FIREFOX		CTRL-Sh-R;CTRL-R
	
	
 ФАЙЛЫ ПРИМЕРОВ:github.com/mrightman/css_4e
 missing:eng:исчерпывающе
 
 
 CSS(Cascading Style Sheets)
 #язык стилей
 #регистрозависим
 #упрощают разработку
 #исп для компоновки макета страницы, позволяя не следить за дизайном на этапе написания HTML
 #тесно взаимодействует с браузером
	стиль - правило описывающее вид конктретного фрагмента
	#CSS-правило
	встроенный стиль - указанный в attr элта
	#inline?
	
	ТАБЛИЦА СТИЛЕЙ
	#набор стилей
	#позволяют форматировать ∀ колво экземпляров элтов с помощь селекторов
	
		ВНУТРЕНЯЯ ТАБЛИЦА СТИЛЕЙ
		#определяется в коде страницы
		#может исп вместе с JS для динамического добавления контента(не рекомендуется)
		#может исп
			в крайнем случае для форматирования всего нескольких эл-тов, без планов на дальнейшую поддержку
			создание HTML email
			#единственный способ использовать CSS в gmail
		
		
		ВНЕШНЯЯ ТАБЛИЦА СТИЛЕЙ
		#внешний стиль
		#отдельный файл связанный со страницей
		#облегчает поддержку
		#работают быстрее(кеширование)
		#css only
		#название информативно
			global.css
			site.css
			styles.css
			#if это общая таблица для ∀ страниц
			form.css
			#if ⊃ код форматирования форм
			...
			
#версии
	CSS 1
	#1996год
	#⊃ основные понятия/команды
		базовая структура таблиц стилей
		концепция селекторов
		большая часть св-в
	CSS 2
	#добавлены
		совместимость с различными устройствами(мониторы/принтеры/...)
		новые селекторы
		точное позиционирование элтов
	CSS 2.1
	#стандарт на ~2016
	#добавлены
		новые св-ва
		исправления неточностей
	CSS 3
	#не явл единым стандартом
	#разобщенная коллекция модулей на разных стадиях завершения
		#по мере возрастания сложности CSS был разбит W3C на отдельные модули
			Selectors
			#фактически работа над уровнем 3 этого модуля завершена, и начата работа над 4
			Values and Units
			Box Alignment
			...
			#∀ модуль может разрабатываться  независимо -> !∃ единого стандарта
	#имеет различную поддержку в браузерах
	#будет постепенном помодульно обновляться вместо появления CSS 4
	#наследует ядро CSS 2.1
	#в CSS3 псевдоклассы начинаются с "::" -> можно исп ::first-letter , ::first-line
 
 МАКЕТ
 #способ организации элтов
 #по сути набор прямоугольных областей
 
 
 ШРИФТЫ
 #можно исп почти ∀ шрифты ⊃ те что не установлены у посетителя
 #вроде подключение шрифтов дб до подключения стилей, тк шрифты задаются стилями
	Google Web Fonts
	#сервис шрифтов	
		<link href='http://fonts.googleapis.com/css?family=Kurale' rel='stylesheet'>
		
		
 HTML
 #подробнее:tinyurl.com/oujmfqw
 #названия тегов и attr регистронезависимы, но не val attr
 #подробнее: "HTML5. Недостающее руководство" Метью Макдональд "БХВ-Петербург"
 #подробнее: "Изучаем HTML, XHTML и CSS" Элизабет и Эрик Фримены "Эксмо"
 #теги определяют фрагменты
	
	
url
#унифицированный указатель ресурса

открывающий + закрывающий тег = HTML-элт

#разметочная(markup) часть Hypertext Markup Language
элты вроде h1, ol, ... были созданы для улучшения читаемости документации(структурированию данных)
HTML 4.01
#допускает attr без val
#стили
	строгий
	переходный
	#transitional
	#объявление
		<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
HTML ⊃ структурные эл-ты позволяющие лучше идентифицировать/группировать контент, и в процессе работы обеспечивающие "маркеры" назначающие св-ва CSS опред эл-там, примеры div, span


XHTML 1.0
#исп синтаксис xml
#регистрозависим
#не допускает attr без val?
#стили
	строгий
	переходный
	#объявление
		<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
		#attr xmlns указывает тип XML(в данном случае - XHTML)
		<html xmlns="http://www.w3.org/1999/xhtml">
	теги
		<br />
		#разрыв строки без создания нового абзаца
		#не стоит злоупотреблять
			иногда браузеры добавляют промежуток между абзацами|заголовком и абзацем
			#раньше это обходили заменяя один <p> несколькими br и элементом font чтобы первая строка абзаца была похожа на заголовок
				#заменено CSS margin
				
				
СБРОС СТИЛЕЙ
#техника устраняющая лишние разрывы между абзацами и другими элтами


HTML5
#допускает исп тегов HTML и XHTML
#геолокация, WebGL, локальные хранилища(что-то сомневаюсь) начали поддерживаться браузерами ~одновременно с HTML5
#предоставляет широкий выбор семантически более осмысленных элтов
	#придание HTML большей семантики - исп элтов описывающих свое содержимое
#многие элты предназначен для расширения возможностей div
#часть эл-тов предоставляет доп возможности
	<video>
	<audio>
#⊃ элементы
	для внедрения медиа-контента
	формы ⊃
		ползунковые регуляторы
		всплывающие панели выбора даты
		встроенную браузерную поддержку валидации
#многие HTML5 теги не приносят особой выгоды по сравнению с div


ВАЛИДАЦИЯ
#синтаксический контроль
	HTML
		validator.w3.org
		#w3c World-Wide Web Consortium, определяет стандарты веб-технологий|яп(хотя мы то знаем что это делает google)
		расширения браузеров
			Web Developer
	CSS
		инструмент валидации W3C
		#tinyurl.com/382hc
		
		
jEdit
#текстовый редактор


EditPlus
#текстовый редактор
#editplus.com


Coda2(OSX)
#⊃gui для создания CSS


Dreamweaver
#что-то вроде IDE для верстки


WebGL
#библиотека для отрисовки


HTML может частично exe fx css, хотя никогда для этого не предназначался
#хотя стоит писать код более приспособленный для CSS
#исп css там где может исп html облегчает рарзработку, и результат работает быстрее
#добавление в элементы attr управляющих форматированием - устаревший стиль


html следует исп только для задания структуры документа, но никогда для дизайна
	размещай эл-ты рядом друг с другом
	ориентируйся на роль фрагмента текста на странице, а не внешний вид
	#напр
		перечень ссылок панели навигации - не текст/заголовок, а больше похож на маркированый список-> выбираем ul и преобразуем его с CSS в горизонтальный
		
		
поисковые боты лучше индексируют чистый HTML, некоторые боты читают лишь ограниченное число символов
	ориентируются на стуктуру -> h1 = заголовки, etc
	#рекомендации google по верстке для правильной индексации:tinyurl.com/olx2lyk
	
	
РЕКОМЕНДАЦИИ ПО СТРУКТУРИРОВАНИЮ HTML
	группироку эл-тов в какой-либо части страницы следует выполнять элтами
		div|article|aside|section
	исп div|span только if нет другого более подходящего тега
	заголовки исп для указания относительной важности текста
	#if два заголовка ⊃ одинаковую важность -> исп один тег
	#if один заголовок - подтема другого -> исп заголовок на уровень ниже(без пропусков)
	стараться исп только селекторы
		тегов
		потомков
	исп id только для js?
	
	
flexbox
#obj


для определения какие браузеры исп пользователи
#просмотр журналов сервера
#исп Google Analytics


Google Analytics
#сервис аналитики


АНАТОМИЯ СТИЛЯ
	ОПРЕДЕЛЕНИЕ СТИЛЯ
	#⊃ из двух основых частей
		эл-та страницы для форматирования ⊃ селектор
		команд форматирования
		#блок объявления
			объяление
			#команда форматирования вида <св-во>:<val>;
			св-во
			#комманда форматирования
			val
			#может быть разных типов val
				цвет(red, #FF0000)
				размер(18px, 200%, 5em)
				url
				ключевых слов(top, center)
				
	СИНТАКСИС
		<селектор> {<св-во>:<val>;<св-во>:<val>}#{...} - блок объявления
		
		
браузеры игнорируют пробельные символы в коде
