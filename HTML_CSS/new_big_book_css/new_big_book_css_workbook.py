СТИЛЬ КОДА
	вроде нужно отбивать селектор от блока св-в табом
		h1	{
			...
		}
	возможно св-ва нужно указывать в опред порядке
		font в начале?
	порядок attr?
		<link href=... rel=...>?
		
		
ТЕГИ
#СХЕМА ВЫБОРА HTML5 ТЕГА:tinyurl.com/o298cs6
	<br>
	#
	
	<textarea>
	#ввод текста?
	
	<blockquote>
	#цитирование материала из другого источника
	#исп
		отрывок текста с другого сайта
		длинные тексты(высказывания)
	#мб исп для выделения текста отступом вправо
	
	
	<q>
	#цитата
		<p>Говорят, что Марк Твен как-то рза написал:
			<q>Самой холодной из ∀ проведенных мною ...</q>
			На самом деле это не так ...
		</p>
	#исп
		вставка краткой цитаты в более длинный абзац
	
	<table>
	#табличная верстка страдала от вложенности
	#отображение
		таблиц
		списков
		диаграмм
		
		<tr>
		#строка?
	
	
	<h1>
	#создание заголовка предшествующего основному содержимомоу
	#обычно заголовок ∀ страницы
	
	<h2...>
	#подзаголовки, делят содержимое на связанные разделы
	
	
	<input>
	#ввод(форма?)
		type
		#тип формы
			text
			#текстовое поле
				<input type="text">
			checkbox
			#флаг
	<ol>
	#нумерованный список
	#исп
		ряд {xn} exe операций
		порядок набора эл-тов
		
	<dl>
	#список определений терминов
	#исп
		словарь терминов с определениями
		#в сочетании с <dt>/<dd>
	#пример: tinyurl.com/ne888za
	
	
	<dt>
	#название термина
	#исп для создания словаря терминов с определениями в <dl>
	
	
	<dd>
	#определение термина
	#исп для создания словаря терминов с определениями в <dl>
	
	<ul>
	#маркированный(ненумерованный) список
	#исп
		перечень связанных элтов
			ссылки навигации
			ссылки содержания
			подсказки
			...
	
	<img src="<path>" alt="<description>"/>
	#изображение
	#строчной
		<img src="holidays.jpg" alt="Пляж">
	
	<abbr>
	#сокращения аббревиатур
	
	
	<code>
	#source код
	
	
	<recipe>
	#такой тег вообще ∃?
	
	
	<header>
	#HTML5
	#может ⊃ содержимое верхней части страницы(логотип, навигационная панель, etc)
	#верхний колонтитул
	
	<nav>
	#HTML5
	#панель навигации ⊃ ссылки
	
	
	<footer>
	#HTML5
	#подвал ⊃ юр информацию, контакты, ...
	#нижний колонтитул
	#может быть помещен напр в <article> для ⊃ информации о публикации(ссылки, дата, ...)
	
	
	<figure>
	#HTML5
	#рисунок
	#в него мб помещены
		<img>
		<figcaption>
		#отображение подписи рисунка(пояснения к изображению в <figure>)
	
	<!doctype ...>
	#объявление типа документа
	#∀ веб-страницы начинаются с объявления типа
	#определяет разновидность/версию HTML исп страницей
	#примеры ∀ разновидностей объявлений:tinyurl.com/onw4nq
	#краткая форма
		<!doctype html>
		#HTML5+
		#IE 6+
	#обязателен, if !∃ -> разные браузеры не имеющие в качестве руководства объявление типа документа могут по разному отображать информацию форматированную CSS(видимо могут игнорить стили)
	
	
	<html>
	#идентифицирует документ как веб-страницу
	#⊃ ∀ элты страницы
	#занимает ∀ пространство страницы
	
	
	<head>
	#раздел заголовка
	#⊃
		название страницы
		служебная инфа для браузеров/поисковых ботов
		css
		...
		
		
	<body>
	#раздел тела
	#вроде занимает ∀ пространство <html>
	#⊃ ∀ отображаемое содержимое
	
	<style>
	#⊃ <head>
	#определяет внутренюю таблицу стилей
	#должен распологаться до JS тк js-сценарии часто исп css
		<head>
			...
			<style>
				h1 {
					color: #F7643;
					font-family: Arial;
				}
			</style>
			<script
			...
		</head>
	<p>
	#абзац текста
	
	
	<strong>
	#выделение текста полужирным
	
	<em>
	#выделение текста курсивом
	
	<meta>
	#метаданные
		charset
		#
			"UTF-8"
			
	<a href="<link>">
	#элт привязки
	#создает гиперссылку
		name
		#внутренняя ссылка
		#может исп для перехода к части страницы
			<a name="Z">...</a>
			#переход по <url>#Z	перекинет к положению тега
				#не следует исп эту fx для этого(см :target)
	<article>
	#HTML5
	#раздел ⊃ завершенную, независимую публикацию
		статью
		запись блога
		описание товара
		основной текст страницы
	<div>
	#∃ почти сразу с появления HTML
	#исп при !∃ подходящего для содержимого элта
	#divide?
	#деление на фрагменты(отдельный законченный(инкапсулированный?) блок содержимого с разрывом строки до и после)(раздел)-> блочный
		#добавление стиля к изображению и подписи
		<div class="photo">
		<img src="holidays.jpg" alt="Птицы"/>
		<p>Подпись</p>
		</div>
	#может успешно заменять HTML5 теги
	#может ⊃ неск блочных эл-тов(а другие теги нет?)
	#в ∀ случае исп напр для группировки элтов(напр в блок новостей) для напр задания 
		последовательного? фонового цвета
		создания контура
		добавления тени
		...
	<link>
	#подключение внешнего ресурса
	#наткнувшись на тег -> браузер загружает указанный ресурс(?подробнее)
		<link href='http://fonts.googleapis.com/css?family=Kurale' rel='stylesheet'>
	#attr
		rel
		#тип ссылки(ресурса)
			stylesheet
			#таблица стилей
			href
			#ссылка
			#путь задается относительно текущего документа|корня
			#подробнее:tinyurl.com/oe6j3sr
	#примеры
		<link href="styles.css" rel="stylesheet">
	<section>
	#HTML5
	#раздел
	#группировка связанного содержимого
		глава книги
		разбивка главной на разделы(новости, контакты,...)
	
	
	<aside>
	#HTML5
	#отступление
	#содержимое связанное с неким контентом
		пометки на полях
	
	
	<video>
	#вставка видео
	
	
	<audio>
	#вставка аудио
		
	
	<span>
	#∃ почти сразу с появления HTML
	#исп при !∃ подходящего для содержимого элта
	#организация и группировка контента
	#применим к строчным элтам
	#может быть исп как
		<a>
		<strong>
	#можно применить к тегу, и исп на нем стиль
		<p>Собственность 2015. <span class="bizName">SuperCo.com</span></p>
	
	
	<cite>
	#цитата(ссылка на другой источник)
	#малоизвестен
	#выделение курсивом
	#исп
		ссылание на книжный заголовок|газетную статью|сайт
		
	
	<adress>
	#малоизвестен
	#исп
		обозначение контактов автора сайта
		указание авторских прав
	
	
	<object>
	#тег?
	
	
	<iframe>
	#фрейм
	
	
	<pre>
	#тег?
	
	
	<acronym>
	#тег?
	
	
	<big>
	#тег?
	
	
	<del>
	#тег?
	
	
	<dfn>
	#тег?
	
	
	<ins>
	#тег?
	
	
	<kbd>
	#тег?
	
	
	<s>
	#тег?
	
	
	<samp>
	#тег?
	
		
	<small>
	#тег?
	
	
	<strike>
	#тег?
	
	
	<sub>
	#тег?
	
	
	<sup>
	#тег?
	
	
	<tt>
	#тег?
	
	
	<var>
	#тег?
	
	
	<u>
	#тег?
	
	
	<center>
	#тег?
	
	
	<form>
	#тег?
	
	
	<fieldset>
	#тег?
	
	
	<label>
	#тег?
	
	
	<legend>
	#тег?
	
	
	<caption>
	#тег?
	
	
	<tbody>
	#тег?
	
	
	<tfoot>
	#тег?
	
	
	<thead>
	#тег?
	
	
	<tr>
	#тег?
	
	
	<th>
	#тег?
	
	
	<td>
	#тег?
	
	
	<canvas>
	#тег?
	
	
	<details>
	#тег?
	
	
	<embed>
	#тег?
	
	
	<hgroup>
	#тег?
	
	
	<menu>
	#тег?
	
	
	<output>
	#тег?
	
	
	<ruby>
	#тег?
	
	
	<time>
	#тег?
	
	
	<mark>
	#тег?
	
	DEPRECATED
		<font>
		#вытеснен CSS
		#форматирование текста, не делает страницу понятнее/не добавляет структурирования
		#для форматирования ∀ абзацев на странице требовалось обернуть ∀ <p> в <font>
		#поддерживает только 7 кеглей(?) шрифта?
		
		
		<b>
		#вытеснен CSS|strong
		#жирный текст
		#вроде в HTML5 позволяет изменить начертание без семантического выделения
		
		<i>
		#вытеснен CSS|em
		#курсив
		#вроде в HTML5 позволяет изменить начертание без семантического выделения
	
СВОЙСТВА
#~attr


	font-size
	#размер шрифта(кегль?)
	
	
	font-family
	#шрифт(начертание)
		#через ',' вроде указываются альтернативные шрифты
		#часть шрифтов мб недоступна конктретному user'у (напр google заблокирован)
		#стек шрифтов(резервных)
		#идея в определении стека с ~ одинаковым начертанием ⊂ большинству ос
		font-family: 'Kurale', 'Arial Black', serif;
	#без веб-шрифтов при отсутсвии указанного шрифта -> исп шрифт by def
	#многословные имена шрифтов нужно указывать в ""
	#названия шрифтов вроде регистроНЕзависимы(проверил)
	#шрифты
		УНИВЕРСАЛЬНЫЕ
			sans-serif
			#рубленый(гротеск|без засечек)
			#семейство
			
			serif
			#антиквенный(с засечками)
			
			monospace
			
			
		ЧАСТО ИСП СОЧЕТАНИЯ ШРИФТОВ
			АНТИКВЕННЫЕ
			#с засечками
				"Times New Roman", Times, serif;
				Georgia, "Times New Roman", Times, serif;
				Baskerville, "Palatino Linotype", Times, serif;
				"Hoefler Text", Garamond, Times, serif;
			
			РУБЛЕНЫЕ
			#без засечек
			#часто исп для заголовков
				Arial, Helvetica, sans-serif;
				Verdana, Arial, Helvetica, sans-serif;
				Geneva, Arial, Helvetica, sans-serif;
				Tahoma, "Lucida Grande", Arial, sans-serif;
				"Trebuchet MS", Arial, Helvetica, sans-serif;
				"Century Gothic", "Gill Sans", Arial, sans-serif;
			
			МОНОШИРИННЫЕ И ДЕКОРАТИВНЫЕ
			#код
				"Courier New", Courier, monospace;
				"Lucida Console", Monaco, monospace;
				"Copperplate Light", "Copperplate Gothic Light",
				"Marker Felt", "Comic Sans MS", fantasy;
			
			ДРУГИЕ ШРИФТЫ
				Arial Black
				Arial Narrow
				Impact
			#МНОГИЕ ШРИФТЫ(напр Arial Black, Impact) ⊃ только одно начертание -> при исп font-weight|font-style=!normal -> браузер сделает ∀ возможное чтобы текст выглядел ужасно
				
	font-weight
	#жирность шрифта
	#при исп шрифтов без соотв начертания браузер сделает ∀ возможное чтобы текст выглядел ужасно
		font-weight: normal;
	
	
	font-style
	#начертание шрифта?
	#при исп шрифтов без соотв начертания браузер сделает ∀ возможное чтобы текст выглядел ужасно
		italic
	
	
	vertical-align
	#
		baseline
		
		
	text-align
	#выравнивание?
		center
		#текст прямо в центре
		
	margin
	#пространство вокруг элта и другими элтами
		#центрирование блока
		#val левого и правого края auto
		margin: 0 auto;
	
	border
	#рамка вокру эл-та
	#не наследуется
	
	border-bottom
	#<размер> <цвет> <стиль>
		border-bottom: 2px white solid;
	
	
	border-collapse
	#?
		collapse
	
	
	border-spacing: 0;
	
		
	border-radius
	#радиус скругления углов
		border-radius: 10px;
		border-radius: 0 0 10px 10px;
		
	box-shadow
	#
		box-shadow: 10px 10px 10px rgba(0, 0, 0,.5)
	
	
	margin-top
	#
	
	
	margin-left
	#
	
	
	margin-right
	#	
	
	
	float
	#позиция
		left
		right
	
	margin-bottom
	#
	
	
	color
	#цвет
	
	
	padding
	#~отступ
	#пространство между границами(border) элта и его содержимым
		padding: 20px;
		padding: 0 0 2px 60px;
		
padding:eng:набивка
margin:eng:поле, край, предел, грань, боковушка
воздух - пространтво вокруг блочных элтов контролируемое margin* и padding*
#автоматом добавляет браузерами

	padding-top
	#пространство между верхней частью эл-та и содержимым
	
	
	line-height
	#межстрочный интервал(интерлиньяж)
	#
	
	
	display
	#отображение элта
		none
		#не отображать
		
		block
		
		
	background-repeat
	#∃?
	
	
	list-style
	#ul, ol
		decimal
	
	background
	#позволяет комбинировать различные свва
		#комбинация background и background-repeat
		background: url(images/head-icon.png) no-repeat 10px 10px;
		background: #CDE6FF url(images/bg_body.png) repeat-x;
	
	background-image
	#фоновое изображение
		#неперекрывающаяся мозаика слева напрово, сверху-вниз
		background-image: url(images/bg_page.png);
	
	
	background-color
	#
		background-color: #E1EDEB;
		
		
	width
	#ширина
		#80% ширины окна браузера
		body {
			width: 80%;
		}
		
		
	height
	#
	
	
	max-width
	#max ширина блока(⊃ растягивание) не Δ min
	#элт адаптивного дизайна
	
	
АТРИБУТЫ ЭЛТОВ
	style
	#принимает CSS-код
		#attr ⊂ HTML -> исп '='
		#val - CSS код
		<h1 style="color: #6A94CC; font-size: 3em;">Большая книга CSS</h1>
	class
	#указание класса
		<p class="special">...
		
	id
	#id
ОТНОШЕНИЯ ТЕГОВ
	предок
	#эл-т ⊃ другой
	потомок
	#элт ⊂ другому
	родитель
	#находится на один уровень выше дочернего
	дочерний элт
	#находится на уровень ниже родителя
	родственный
	#дочерний для того же родителя
	смежный
	#элт следующий сразу за другим элтом того же уровня
	ПРИМЕР
		<html>
		#предок head, body, p
		#родитель head, body		
			<head>
			#родственный  body
			#...
			<body>
			#предок родитель p
			#смежный родственный head
			#...
				<p>
				#потомок html, body
				#дочерний body
				#...
				
		
СЕЛЕКТОРЫ
#выбор форматируемых элтов
#чем ниже селектор в коде тем выше приоритет
#∀ простые селекторы ⊂ {xn} селекторов оцениваются одновременно
#поддержка селекторов браузерами: caniuse.com
	СЕЛЕКТОРЫ ТЕГОВ(ЭЛЕМЕНТОВ)
	#форматирование ∀ экземпляров конктретного HTML элта
	#заголовок, абзац, ...
	#наследуют имена HTML элтов(тегов)
		html {
			...
		}
	
	
	ГРУППОВОЙ СЕЛЕКТОР
	#можно комбинировать ∀ типы селекторов
		html, address, .copyright, #banner {
			...
		}
	
	
	УНИВЕРСАЛЬНЫЙ СЕЛЕКТОР
	#для выборки ∀ элтов
		* {
			...
		}
	#можно исп
		в составе селектора потомков
		для удаления ∀ пространства вокруг блочных элтов
			* {
				padding: 0;
				margin: 0;
			}
	
	
	СЕЛЕКТОР ПОТОМКОВ
	#вложенный селектор(контекстный)
	#сокращает HTML, позволяя создавать индивидуальные стили без указания классов/id, объединяя простоту исп селекторов тегов и точность классов/id
	#использует дерево HTML
	#∀ элты потомки(не дочерние) опред элта
	#синтаксис
		<∀ предок> [...] <потомок>
	#можно комбинировать ∀ типы селекторов
		#∀ элты ⊂ .banner
		.banner * {
			...
		}
	#примеры
		#∀ strong ⊂ h1
		h1 strong {
			...
		}
	#ИСП КРАТЧАЙШИЙ СЕЛЕКТОР ТОЧНО ОПРЕДЕЛЯЮЩИЙ ТЕГ(напр не стоит ⊃ html|body)
	#специфичность - поведение при конфликтах стилей
	#часто исп для форматирования модуля кода

	СЕЛЕКТОРЫ КЛАССОВ
	#начинаются с '.<A-z>'
	#регистрозависимы
	#могут ⊃ 
		A-z
		-
		_
	#синтаксис
		<<tag> class="intro">
		...
		.intro {
			...
		}
	#можно применить неск классов к одному элту(интересно что происходит при конфликтах?)
	#свва различных классов объединяются в результирующий стиль и применяются к элту
	классы разделяются пробелом
		#] ∃ интерфейс управления корзиной интернет магазина ⊃ кнопки
			удаления товара
			добавления товара
			Δ кол-ва товара
			#∀ кнопки ⊃ единый дизайн, но различались подсветкой
				CSS
				.btn {
					border-radius: 5px;
					font-family: Arial, Helvetica, serif;
					font-size: .8em;
				}
				.delete {
					background-color: red;
				}
				.add {
					background-color: green;
				}
				.edit {
					background-color: grey;
				}
				HTML
				<button class="btn add">...
				<button class="btn delete">...
				<button class="btn edit">...
				#?возможно получить доступ к такому элту можно также
					button.btn|button.btn.add
					#чем больше специфичность - тем выше приоритет
						#приоритет
							собственный стиль
							#
							ближайшие предки
							...

	КЛАСС ЭЛЕМЕНТА?
	#
		p.intro {
			...
		}
		
		<p class="intro">
CMS
#сисмы управления контентом		
	ИДЕНТИФИКАТОРЫ
	#специфичность может легко превысить специфичность других стилей
	#исп для селекции уникальных частей(шапка, панель навигации)(напр CMS)
	#исп JS/больших страницах
		простой способ определение частей для манипуляции
		#часто исп к заполняемым эл-там форм для напр валидации
		создание ссылок на части страницы
		#для этого даже не нужен css
		#вид
			<url>#<id>
			#~ исп <a name="<id>">...
	#вроде рекомендуется не исп
		id исп для скриптов
		исп id для скриптов требует доп проверок -> медленнее
		if подребуется добавить элт с таким-же стилем придется менять id на class 
		другие причины требующие глубокого понимания CSS
		#tinyurl.com/6ge7z86
		имеют слишком высокую специфичность что может приводить к войнам специфичности
			#делает спецификаторы длиннее и бесполезнее
			#переопределение special мб неожиданным
				#article p {...}
				.special {...}
				...
				<div class="article">
					<p>Абзац</p>
					<p>Другой абзац</p>
					<p class="special">Особенный абзац</p>
				</div>
	#синтаксис
	#начинается с "#", в остальном ~ классам
		#banner {
			...
		}
		<<tag> id="banner">...
	#могут исп для указания того что элт единственный(вроде блока ⊃ copyright)
	
	ПСЕВДО[КЛАССЫ|ЭЛТЫ]
	#могут применяться ∀ селекторам
	
	
	ПСЕВДОЭЛТЫ
	#создают абстрации о DOM вне указанных в языке документа(напр доступ к первой букве)
	#один селектор может ⊃ только один псевдоэлт после {xn} простых селекторов(субъектов селектора)
	#создают виртуальные элты к которому могут применяться правила и селекторы псевдокласов
	#фильтруют контент, а не элты(::first-line, ::first-letter) и помещают его в вирт контейнер
	#выбор фрагментов !⊃ элты
		первая строка p
		выделенная ссылка
	#мб применен к различным селекторам(?∀)
		.highlight:hover {
			
		}
	ПСЕВДОКЛАССЫ
	#разрешение выбора на основе информации ⊂ вне дерева документа|которая не мб выражена ∀ простыми селекторами
		#напр информация для a:visited !⊂ DOM, и !∃ DOM-интерфейса для доступа к этим параметрам
	#может ⊃ необязательное val в ()
	#разрешены во ∀ {xn} простых селекторов ⊂ селектору, в ∀ месте {xn} простых селекторов после ведущего селектора типа|универсального селектора
	#регистроНЕзависимы
	#некоторые - взаимоисключающие
	#динамичны - элт может получить/потерять его при exe
	#вроде селектор состояния
	#в CSS3 псевдоэлты начинаются с "::" -> можно исп ::first-letter , ::first-line
		
		ФОРМАТИРОВАНИЕ
			ССЫЛОК
				a:link
				#непосещенная, не выделенная, с не наведенным указателем
				
				a:visited
				#посещенная(⊃ истории браузера)
				#⊃ ограничения
				
				a:active
				#выбранная ссылка(во время нажатия)
			
			ФРАГМЕНТОВ АБЗАЦА
				::first-letter
				#форматирование текста
				#создание буквицы
				::first-line
				#псевдоэлт
				#форматирование первой строки текста
				
		
window.location.hash
#мб исп для поиска obj в js


		:focus
		#выбор tab'ом|установка курсора в текстовое поле
			input:focus	{
				background-color: #FFFFCC;
			}
			
			
		:not(<selector>)
		#выбор элтов !⊃ <selector>
		#псевдокласс отрицания
		#исп
			предотвращение нежелательного наследования
			выбор элта отличного от другого
				.classy { color: red; }
				p:not(.classy) { color: blue; }
			при исп селекторов attr
				#выбор абсолютных ссылок на внешние ресурсы
				#∀ абсолютные ссылки кроме ведущих на mysite.com
				a[href^="http://"]:not([href*="mysite.com"])
				#короче(но не думаю что это безопасно)
				a[href^="http://"]:not([href*="mysite.com"])
		#ограничения
			может исп только с простыми селекторами
				#примеры
				.footnote:not(div)
				img:not(.portrait)
				div:not(#banner)
				li:not(:first-child)
			нельзя исп с
				селекторами потомков
					div p a
				псевдоэлтами
				групповыми селекторами|комбинациями
					h2 + p
				с другими :not()
					a[href^="http://"]:not([href*="google.com"]):not([href="yahoo.com"])	>> Err
			
			
ПРОСТЫЕ СЕЛЕКТОРЫ
	тегов
	универсальный
	классы
	id
	псевдоклассы
				
некоторые CMS исп абсолютные ссылки на внутренние страницы сайта
#напр
	wordpress

			
		:target
		#можно получить доступ через манипуляции с DOM(не не может быть выражено с помощью простых селекторов)
			#window.location.hash
		#подробнее: tinyurl.com/ltqzlfu
		#примеры
			применение стиля только после щелчка по другому элту
				#до щелчка форма мб скрытой
				#signupForm {
					display: none;
				}
				#signupForm:target {
					display: block;
				}
				<buttn>
					<a href="#signupForm">Подпишитесь на рассылку</a>
				</button>
				<form id="signupForm">
					<label for="email">Укажите свой email</label>
					<input type="email" id="email">
					<input class="btn" type="submit" value="Подписаться">
				</form>
				#при переходе по <a> форма становится целевой
		#зависит от исп конкретных id
		#if url ⊃ #<id> -> элт ⊃ id становится селектором target -> можно активировать стиль при переходе к этому элту по "внутренней ссылке"(см <a>)
		
		
		:hover
		#наведен курсор
		
		
		::after
		#исп с content для вывода данны после содержимого элта
		
		
		::before
		#исп с content для вывода данных перед содержимым элта
			.tip::before {
				content: "ADVICE!";
			}
		::selection
		#исп только с ::
		#выделенный текст только цвет/фон
			p::selection {
				...
			}
			::selection {
				color: #FFFFFF;
				background-color: #993366;)
			}
		:first-child
		#CSS3
		#∀ первые дочерние элты
			h1:first-child
			#первый дочерний элт
				<body>
					<h1>...#первый дочерний
					<div>
						<h1>...#первый дочерний
						<h1>...
					...
					<h1>...
				...
			li:first-child
			#первые элты списков
			
			
		:last-child
		#CSS3
		#~:first-child
		
		
		:first-of-type
		#~:first-child, но применяется к дочернему определенного типа
			#первый абзац боковой панели
			.sidebar p:first-of-type
		
		
		:last-of-type
		#~:first-of-type
		
		
		:nth-of-type()
		#~:nth-child, но применяется к эл-там опред типа
		#исп
			большой текст с изображениями
				#чередование изображений слева/справа
					img:nth-of-type(odd) {
						float: left;
					}
					img:nth-of-type(even) {
						float: right;
					}
		
		:nth-child()
		#args
			odd
			even
			[-][<∀ n-й>] [+] [<начиная с>]
				3n + 1
				#∀ 3й со 2го
				2
				3n
				-n + 3
				#выбор в обратном порядке начиная с 3его до 0ого
		#пример
			<ol>			
				<li></li> #odd	(-n + 3)
				<li></li> #2n	(-n + 3)
				<li></li> #odd	(-n + 3)
				<li></li> #2n
			</ol>
		
		
		:only-child
		#единственный дочерний
			#только if элт ⊃ единственный дочерний
			p:only-child {
				color: red;
			}
можно не исп абсолютные ссылки в пределах сайта(мб полезно для селекции ссылок на внешние ресурсы)
ПРОТОКОЛЫ
	https
	#исп защищенное SSL-соединение
СЕЛЕКТОРЫ ATTR
#выборка на основе ⊂ attr
	<селектор>[attr]
		#img с указанным title
		img[title] {
			...
		}
		#? будет ли совпадение с "cafesoylentgreen.com"
		a[href="http://www.cafesoylentgreen.com"]
		
		.photo[title] {
			...
		}
#поддерживает "re"
	^
	#начинающийся
		a[href^="http://"], a[href="https://"]
	$
	#кончающийся
		a[href$=".pdf"] {
			background: url(doc_icon.png) no-repeat;
			padding-left: 15px;
		}
	*
	#содержащий
		#рамка для ∀ файлов ⊃ "photo" в названии файла
		img[src*="photo"] {
			...
		}
#уточнение val полезно при работе с формами ⊃ одинаковые названия(флаг, текстовое поле, кнопка)


ДОЧЕРНИЕ СЕЛЕКТОРЫ
#вложенные элты(не потомки)
	<родитель> > <дочерний>
		<body>
			<h2>
			<div>
				<h2>
		...
					body h2		#выбор обоих h2
					body > h2	#только первый
					div > h2	#только второй	
#исп
	ФОРМАТИРОВАНИЕ СПИСКОВ
		создаем класс для верхнего уровня списка(напр .mainList)
			<ul class="mainList">
		форматируем элты только первого уровня
			ul.mainList > li
		вложенные пункты
			ul.mainList > li > ul > li
			

РОДСТВЕННЫЕ СЕЛЕКТОРЫ
#выбор элта ⊂ группе родственных
#исп
	выбор ∀ первого p после ∀ h1
		h1 + p {
			...
		}
		#пробелы не обязательны
		h1+p {
			...
		}
		
		
ОБЩИЙ РОДСТВЕННЫЙ СЕЛЕКТОР
<"цель"> ~ <тег>
#∀ теги родственные "цели"
	h2 ~ p
	#∀ p ⊃ в родственниках h2

ВЕНДОРНЫЕ ПРЕФИКСЫ
#работают только в соотв браузере и для кроссбраузерности можно указывать несколько стилей для разных селекторов
	-moz-
	#firefox
		::-moz-selection
		#selection поддерживаемый firefox
		
СГЕНЕРИРОВАННЫЙ КОНТЕНТ
#созданный на лету с исп 
	#::before, ::after, ...(!⊂ HTML)
	#маркеры/цифры списков
РОЛЛ-ОВЕР-ЭФФЕКТ
#визуальный эффект трансформации


МОДУЛИ КОДА
#для форматирования модуля кода часто исп селекторы потомков
#коллекция html элтов exe на странице конкретную fx
	#вроде div ⊃ контакты
	<div class="contact">
		<p class="name">...</p>
		<p class="phone">...</p>
		...

НАСЛЕДОВАНИЕ
#механизм наследования стилей
#обычно эл-т наследует свва предка(⊃ при исп дочерних селекторов)
#упрощают таблицы
#копирование свв из окружающих элтов
	ОГРАНИЧЕНИЯ НАСЛЕДОВАНИ
	#многие свва не наследуются(⊃ параметры наследования)
		обычно не наследуются
			свва размещения
				поля
				отступы
				фоновый цвет
				границы элтов
		border
		
	БРАУЗЕРНЫЕ СТИЛИ
	#браузеры исп свои стили форматирования(⊃ большую специфичность)
	#∀ браузеры ⊃ отличия стандартных стилей
		разные размеры элтов
		разные размеры отступов
		#примеры
			Chrome
				исп padding для отступа в маркированных списках
			Firefox
				исп padding для отступа в маркированных списках
			IE
				исп margin для отступа в маркированных списках
	#не определяются страндартами
		шрифт h1 > h2
		заголовки bold
		подчеркивание ссылок
		отступ маркированных списков
	#разумеется переопределяются пользовательскими стилями с = специфичностью
	h<n> - обычно крупный bold
	#if body ⊃ font-size -> заголовки все равно будут больше
		a	- синий цвет
	CSS Reset
	#сброс стилей(отключение стилей браузера)
	#∃ базовый набор стилей для включения в начало стиля - устанавливают базовые val свв обычно по разному обрабатывающихся браузерами
		ШАБЛОН СБРОСА СТАНДАРТНЫХ СТИЛЕЙ
		#создан Эриком Мейером: tinyurl.com/2amlyf
		#∀ элты становятся практически одинаковыми
			html, body, div, span, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video {
				margin: 0;
				padding: 0;
				border: 0;
				font-size: 100%;
				vertical-align: baseline;
			}
			
			/*помогает старым браузерам отображать новые элты*/
			article, aside, details, figcaption, figure, footer, hgroup, menu, nav, section {
				display: block;
			}
			
			body {
				line-height: 1.2;
			}
			
			ol {
				padding-left: 1.4em;
				list-style: decimal;
			}
			
			ul {
				padding-left: 1.4em;
				list-style: square;
			}
			/*упрощение добавления рамок к ячейкам
			table {
				border-collapse: collapse;
				border-spacing:0;
			}
			
			
		ДРУГОЙ ШАБЛОН СБРОСА
		#normalize.css : tinyurl.com/oy58gya
			
	ОБХОД ОГРАНИЧЕНИЙ НАСЛЕДОВАНИЯ
		универсальный селектор
			#принудительное наследование свв p
			p, p * {
				...
			}
	
	
DOM
#Document Object Model - Объектная Модель Документа
#платформонезависимый api для доступа к/Δ содержимого HTML, XHTML, XML
#не накладывает ограничений на структуру документа
	#∀ документ известной структуры мб представлен деревом узлов(элемент|attr|текстовый/графический/∀ obj) связанных отношением родитель-наследник
#ранее ∀ бразер ⊃ свою реализацию, W3C классифицировали ее по уровням, создали для ∀ спеки объединенные в группу W3C DOM
#поддерживает навигацию в ∀ области(напр родитель и предыдущий брат) и учитывает ∀ Δ-> реализация должна min буфферизовать документ
#движок браузера преобразует HTML -> DOM, разные движки ⊃ разную поддержку стандартов DOM(уровни соответсвия)
#браузеры не обязаны исп DOM для исполнения HTML, но требуется для доступа к HTML из js


JDOM
#api для работы с XML в Java уровенем выше


УРОВНИ W3C DOM
	0
	#ограничения возможности обнаружения пользовательских событий и Δ HTML = DOM Level 0|традиционный DOM частично описанный в спеках HTML4, но не ⊃ независимого стандарта
	#⊃ ∀ модели DOM появившиеся до 1
		document.images
		document.forms
		document.layers
		document.all
	#формально не спецификация DOM, а информация о ∃ моделях до начала процесса стандартизации
	1
	#базовые fx возм DOM(HTML и XML)
		получение дерева узлов
		Δ/добавление данных	
	2
	#current
	#⊃
		поддержку пространтсва имен XML
		<--filtered views-->
		событий
	3
	#⊃ рекомендуемые на данный момент части
	#⊃ 6 различных спек
		DOM Level 3
			Core
			Load and Save
			XPath
			Views and Formatting
			Requirements
			Validation



jscript
#конкурировал с js в 90х, создан MS, вроде исп для написания страниц ASP и конфигурирования Win

КАСКАДНОСТЬ
#~правила каскадности
#правило приоритетности стилей(задающих {xn} применения)
#управление сложной структурой стилей
	#при усложнении стилей они становятся все более сложнокомбинированными(элт наследует св-ва сразу от многих предков)
	#может возникнуть конфликт
		внешняя/внутреняя таблица
		применение неск стилей к одному элту
		механизм наследования
#пример
	h1, h2 {
		color: ...;
	}
	
	h1 {
		font-size: ...;
	}
	
	
ПРАВИЛА КАСКАДНОСТИ
#!=наследование
	ВЫЧИСЛЕННЫЙ СТИЛЬ
	св-ва унаследованные от разных предков по сути комбинируются с собственными
	#пример
		<div id="mainContent"><p class="byline">...
		#к p применяются след селекторы
			#mainContent p
			#mainContent .byline
			p.byline
			.byline
	ОПРЕДЕЛЕНИЕ ПРИОРИТЕТОВ CSS
	#можно просмотреть в инспекторе элтов(браузер сортирует их по специфичности)
	#подробнее о devtools браузера: tinyurl.com/oetspo9  |  tinyurl.com/nb3ls5u
		#зачеркнутые свва
			не применяется
			замещено другим стилем
	#основан на присвоении val в у.е. ∀ типу селекторов
		#работает для ∀ случаев кроме самых ебнутых
		наследуемые свва						0 	уе
		селектор тегов/селектор псевдоэлтов	1	уе
		класс/селектор псевдокласса			10	уе
		id									100	уе
		строчный стиль						1000 уе
		#в реале сложнее(w3.org/TR/css3-selectors/#specificity)
		#пример
			<img id="logo" class="cl">...
			#if стили
				img
				#logo
				.class
					⊃ одно св-во -> будет исп свво ⊂ #logo тк оно ⊃ большую специфичность
		if два стиля ⊃ равную специфичность
			исп последний
			#⊃ внешние внутренние таблицы(зависит от того что объявлено/импортировано позже)

МЕТКИ
	АННУЛИРОВАНИЕ СПЕЦИФИЧНОСТИ
		!important
		#применяется к свву, а не стилю
		#∀ другой более специфичный стиль не будет исп
			#a будет исп всегда
			.nav a { color: red; }
			a { color: blue !important; }
		#конфликты !important разруливаются специфичностью
		#при излишнем исп -> ломает каскадность и приводит и эскалации метки(для компенсации !important в одном стиле придется использовать ее в другом etc)


РАЗРУЛИВАНИЕ КОНФЛИКТОВ
	повышение веса нужного стиля
	#по идее сильно проще повышения другого тк иначе придется
		#Δ неск стилей
		#думать над специфичностью
	#может привести длинным селекторам
	
	!important
	#крайний случай
	
	выборочное игнорирование приоритетов
	#выборочная отмена стилей
		#] ∃ общий стиль для ∀ страниц, нужно Δ одно свво одной страницы  -> можно
			создать внутренюю таблицу
			или создать еще одну внешнюю
			или создать новый класс
	
ЗНАЧЕНИЯ
	float
	#можно записывать без 0
		.5
	
	ПРОЦЕНТЫ
	
	colors
		rgba(<r:0..255>,<g:0..255>,<b:0..255>,<alpha:0..1>)
		#цветовая модель rgba
		#тогда цвет foreground элтов зависит от background элтов
		rgb()
		#~rgba !⊃ alpha
		
		значения
			#fff
			#fafafa
			
		keywords
		#
			black
			white
			orange
			teal
			#зеленовато-голубой
		#примеры
			color: black;
			
ЕДИНИЦЫ ИЗМЕРЕНИЯ
	em
	#вроде мб float
	#1em - размер в браузере by def, 2em - 200% от стандартного
		font-size: 1.25em;
	%
	#мб > 100
		line-height: 150%;
	px
	#
	
	
можно объединить ∀ набор div, span в блоке div как
	заголовок
	маркированный список
	неск абзацев

при ошибках верстки
	кривом/отсутсвующем doctype
		браузер переключится в режим совместимости
РЕЖИМ СОВМЕСТИМОСТИ
#эмулирует работу старых браузеров выпускавшихся до 99 года(Netscape 4, IE5)
#подробнее:tinyurl.com/nr9dehz;	tinyurl.com/pm8k7ng
			
			
КОММЕНТАРИИ
	HTML
		УСЛОВНЫЕ КОММЕНТАРИИ INTERNET EXPLORER
		#походу помещенный в них код exe при exe условия
		#IE 6..8
		#игнорируется другими браузерами
			<!--[if <cond>]> <тело> <![endif]-->
		ПОДДЕРЖКА HTML5 В IE8(ЧАСТИЧНАЯ)
				<head>
					...
					<!--[if lt IE 9]> <script src="//html5shiv.googlecode.com/svn/trunk/html5.js"></script><![endif]-->
				</head>
	CSS
		/* comment */
			
			
			
подробнее об элтах HTML:tinyurl.com/d4gsdrr
подробнее об элтах HTML:tynyurl.com/pc3ddbc
подробнее об элтах HTML:"HTML5. Карманный справочник" Дженнифер Роббинс "Вильямс"


СТРОЧНЫЕ ЭЛТЫ
#находятся в пределах абзаца текста|заголовка
	#Cosmo-Farmer.com- строчный элт
	<p>Добро пожаловать на сайт <span class="companyName">Cosmo-Farmer.com</span>, дочерней компании ...
	
	
ПРИНУДИТЕЛЬНАЯ ПЕРЕЗГРУЗКА СТРАНИЦЫ
#без исп кеша
	CHROME, IE	CTRL-F5
	FIREFOX		CTRL-Sh-R;CTRL-R
	
	
 ФАЙЛЫ ПРИМЕРОВ:github.com/mrightman/css_4e
 missing:eng:исчерпывающе
 
 
 CSS(Cascading Style Sheets)
 #язык стилей
 #регистрозависим
 #упрощают разработку
 #исп для компоновки макета страницы, позволяя не следить за дизайном на этапе написания HTML
 #тесно взаимодействует с браузером
	стиль - правило описывающее вид конктретного фрагмента
	#CSS-правило
	встроенный стиль - указанный в attr элта
	#inline?
	
	ТАБЛИЦА СТИЛЕЙ
	#набор стилей
	#позволяют форматировать ∀ колво экземпляров элтов с помощь селекторов
	
		ВНУТРЕНЯЯ ТАБЛИЦА СТИЛЕЙ
		#определяется в коде страницы
		#может исп вместе с JS для динамического добавления контента(не рекомендуется)
		#может исп
			в крайнем случае для форматирования всего нескольких эл-тов, без планов на дальнейшую поддержку
			создание HTML email
			#единственный способ использовать CSS в gmail
			упрощает разработку очень простых сайтов(напр учебных)
		
		ВНЕШНЯЯ ТАБЛИЦА СТИЛЕЙ
		#внешний стиль
		#отдельный файл связанный со страницей
		#облегчает поддержку
		#работают быстрее(кеширование)
		#css only
		#название информативно
			global.css
			site.css
			styles.css
			#if это общая таблица для ∀ страниц
			form.css
			#if ⊃ код форматирования форм
			...
			
#версии
	CSS 1
	#1996год
	#⊃ основные понятия/команды
		базовая структура таблиц стилей
		концепция селекторов
		большая часть св-в
	CSS 2
	#добавлены
		совместимость с различными устройствами(мониторы/принтеры/...)
		новые селекторы
		точное позиционирование элтов
	CSS 2.1
	#стандарт на ~2016
	#добавлены
		новые св-ва
		исправления неточностей
	CSS 3
	#не явл единым стандартом
	#разобщенная коллекция модулей на разных стадиях завершения
		#по мере возрастания сложности CSS был разбит W3C на отдельные модули
			Selectors
			#фактически работа над уровнем 3 этого модуля завершена, и начата работа над 4
			Values and Units
			Box Alignment
			...
			#∀ модуль может разрабатываться  независимо -> !∃ единого стандарта
	#имеет различную поддержку в браузерах
	#будет постепенном помодульно обновляться вместо появления CSS 4
	#наследует ядро CSS 2.1
	#в CSS3 псевдоклассы начинаются с "::" -> можно исп ::first-letter , ::first-line
		#обратная совместимость доступна для старых элтов
 
 МАКЕТ
 #способ организации элтов
 #по сути набор прямоугольных областей
 
 ДЕБАГ
 #можно глянуть задержки загрузки разных частей
 #отключить кеш
 
 СГЛАЖИВАНИЕ ШРИФТОВ
	Windows
	#ClearType
	#зависит от настроек
	#подробнее: tinyurl.com/pmzxbnm
	OSX
 ВЕБ-ШРИФТЫ
 #учитывая кеширования почти нет разницы между сторонним cdn и self-hosted
 #можно исп почти ∀ шрифты ⊃ те что не установлены у посетителя
 #вроде подключение шрифтов дб до подключения стилей, тк шрифты задаются стилями
	Google Web Fonts
	#сервис шрифтов	
	#генерит css исп который можно сделать шрифты локальными
		<link href='http://fonts.googleapis.com/css?family=Kurale' rel='stylesheet'>
#подключение локального
	#правило загружающее шрифт
	@font-face {
		# название шрифта(чтобы не запутаться лучше указать название папки со шрифтом) 
		font-family: 'Web font';
		# адрес шрифта и тип(браузер выберет подходящий)
		src: url('webfont.woff2') format('woff2'),
		        url('webfont.woff') format('woff');
		font-weight: normal;
		font-style: normal;
	}

	<selector> {
		font-family: "RalewayRegular"
	}
#для совметимости можно исп неск форматов шрифтов
#форматы
	ttf
	woff
	eot
	otf
	svg
	woff2
	#современный
		ЗАГРУЗКА ЛОКАЛЬНЫХ ШРИФТОВ
		#https://google-webfonts-helper.herokuapp.com/fonts
#список шрифтов by def ⊂ OSX/WIN ⊃ процентные соотношения
	Courier New: 99,73% Win, 95,68% Mac
	Monaco: 100% Mac
@font-face
#директива для подключения шрифтов
#требует отдельного объявления для ∀ начертания
	
 HTML
 #подробнее:tinyurl.com/oujmfqw
 #названия тегов и attr регистронезависимы, но не val attr
 #подробнее: "HTML5. Недостающее руководство" Метью Макдональд "БХВ-Петербург"
 #подробнее: "Изучаем HTML, XHTML и CSS" Элизабет и Эрик Фримены "Эксмо"
 #теги определяют фрагменты
	
	
url
#унифицированный указатель ресурса

открывающий + закрывающий тег = HTML-элт

#разметочная(markup) часть Hypertext Markup Language
элты вроде h1, ol, ... были созданы для улучшения читаемости документации(структурированию данных)
HTML 4.01
#допускает attr без val
#стили
	строгий
	переходный
	#transitional
	#объявление
		<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
HTML ⊃ структурные эл-ты позволяющие лучше идентифицировать/группировать контент, и в процессе работы обеспечивающие "маркеры" назначающие св-ва CSS опред эл-там, примеры div, span


XHTML 1.0
#исп синтаксис xml
#регистрозависим
#не допускает attr без val?
#стили
	строгий
	переходный
	#объявление
		<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
		#attr xmlns указывает тип XML(в данном случае - XHTML)
		<html xmlns="http://www.w3.org/1999/xhtml">
	теги
		<br />
		#разрыв строки без создания нового абзаца
		#не стоит злоупотреблять
			иногда браузеры добавляют промежуток между абзацами|заголовком и абзацем
			#раньше это обходили заменяя один <p> несколькими br и элементом font чтобы первая строка абзаца была похожа на заголовок
				#заменено CSS margin
				
				
СБРОС СТИЛЕЙ
#техника устраняющая лишние разрывы между абзацами и другими элтами


HTML5
#допускает исп тегов HTML и XHTML
#геолокация, WebGL, локальные хранилища(что-то сомневаюсь) начали поддерживаться браузерами ~одновременно с HTML5
#предоставляет широкий выбор семантически более осмысленных элтов
	#придание HTML большей семантики - исп элтов описывающих свое содержимое
#многие элты предназначен для расширения возможностей div
#часть эл-тов предоставляет доп возможности
	<video>
	<audio>
#⊃ элементы
	для внедрения медиа-контента
	формы ⊃
		ползунковые регуляторы
		всплывающие панели выбора даты
		встроенную браузерную поддержку валидации
#многие HTML5 теги не приносят особой выгоды по сравнению с div


ВАЛИДАЦИЯ
#синтаксический контроль
	HTML
		validator.w3.org
		#w3c World-Wide Web Consortium, определяет стандарты веб-технологий|яп(хотя мы то знаем что это делает google)
		расширения браузеров
			Web Developer
	CSS
		инструмент валидации W3C
		#tinyurl.com/382hc
		
		
jEdit
#текстовый редактор


EditPlus
#текстовый редактор
#editplus.com


Coda2(OSX)
#⊃gui для создания CSS


Dreamweaver
#что-то вроде IDE для верстки


WebGL
#библиотека для отрисовки


HTML может частично exe fx css, хотя никогда для этого не предназначался
#хотя стоит писать код более приспособленный для CSS
#исп css там где может исп html облегчает рарзработку, и результат работает быстрее
#добавление в элементы attr управляющих форматированием - устаревший стиль


html следует исп только для задания структуры документа, но никогда для дизайна
	размещай эл-ты рядом друг с другом
	ориентируйся на роль фрагмента текста на странице, а не внешний вид
	#напр
		перечень ссылок панели навигации - не текст/заголовок, а больше похож на маркированый список-> выбираем ul и преобразуем его с CSS в горизонтальный
		
		
поисковые боты лучше индексируют чистый HTML, некоторые боты читают лишь ограниченное число символов
	ориентируются на стуктуру -> h1 = заголовки, etc
	#рекомендации google по верстке для правильной индексации:tinyurl.com/olx2lyk

типографика
#оформление текстового контента
РЕКОМЕНДАЦИИ ПО СОЗДАНИЮ СТИЛЕЙ
	игнорируюй стили браузеров
	#упрости создание кроссбраузерной верстки
	min исп !important
РЕКОМЕНДАЦИИ ПО СТРУКТУРИРОВАНИЮ HTML
	группироку эл-тов в какой-либо части страницы следует выполнять элтами
		div|article|aside|section
	исп div|span только if нет другого более подходящего тега
	заголовки исп для указания относительной важности текста
	#if два заголовка ⊃ одинаковую важность -> исп один тег
	#if один заголовок - подтема другого -> исп заголовок на уровень ниже(без пропусков)
	стараться исп только селекторы
		тегов
		потомков
	исп id только для js?
	
	
flexbox
#obj


для определения какие браузеры исп пользователи
#просмотр журналов сервера
#исп Google Analytics


Google Analytics
#сервис аналитики


АНАТОМИЯ СТИЛЯ
	ОПРЕДЕЛЕНИЕ СТИЛЯ
	#⊃ из двух основых частей
		эл-та страницы для форматирования ⊃ селектор
		команд форматирования
		#блок объявления
			объяление
			#команда форматирования вида <св-во>:<val>;
			св-во
			#комманда форматирования
			val
			#может быть разных типов val
				цвет(red, #FF0000)
				размер(18px, 200%, 5em)
				url
				ключевых слов(top, center)
				
	СИНТАКСИС
		<селектор> {<св-во>:<val>;<св-во>:<val>}#{...} - блок объявления
		
		
браузеры игнорируют пробельные символы в коде
